upstream {{upstream_name}} {
{%- for upstream in upstreams -%}
    server {{upstream['hostname']}}:{{upstream['port']}};
{%- endfor -%}
}

map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}


server {
    listen 80;
    listen [::]:80;
    server_name {{fqdn}};
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{fqdn}};
    ssl_certificate {{fullchain}};
    ssl_certificate_key {{privkey}};
    ssl_dhparam {{dhparam}};
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  ## Limits which protocols are used, so unsecure ones can be excluded (for instance, SSLv1, SSLv2)
    ssl_prefer_server_ciphers on;  ## Specifies that server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols.
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";  ## Specifies the enabled ciphers.
    ssl_ecdh_curve secp384r1;  ## Type of elliptic curve to use when using elliptic cyphers.
    ssl_session_timeout 24h;  ## How long before a client renegotiates its session
    ssl_buffer_size 1400;  ## When handling large files/payloads, this value must be increased, or SSL renegotiation will fail.
    ssl_session_tickets off;  ## https://github.com/mozilla/server-side-tls/issues/135
    ssl_stapling on;  ## https://tools.ietf.org/html/rfc4366#section-3.6
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=63072000 always;  ## Force HTTPS, helps to protect websites against protocol downgrade attacks and cookie hijacking

    location / {
        proxy_pass http://{{upstream_name}};
        proxy_set_header Host $host;

        # The following headers are set for packages sent to the server so
        # that the server knows the details of the connection between the
        # proxy and the client. This is useful for a number of things like
        # the server generating the correct URL for links to itself and
        # for logging purposes.
        #
        # More information: <https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/x-forwarded-headers.html>
        #
        proxy_set_header X-Real-IP $remote_addr;                       # Real address of the client
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   # Address of the client and all previous proxies (spoofable)
        proxy_set_header X-Forwarded-Proto $scheme;                    # Protocol used for communication between proxy and client (http|https)

        proxy_http_version 1.1;                                        # For keep-alive sessions
        proxy_set_header Upgrade $http_upgrade;                        # Websockets upgrade
        proxy_set_header Connection $connection_upgrade;               # Websockets upgrade

        {% if auth_basic %}
        # Don't forward auth to backend service
        proxy_set_header Authorization "";

        limit_except OPTIONS {
            auth_basic "Restricted Content";
            auth_basic_user_file {{htpasswd}};
        }
        {% endif %}
    }
}
